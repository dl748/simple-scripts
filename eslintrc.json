{
  "ignorePatterns": [
    "package-lock.json",
    "node_modules/**",
    "dist/**"
  ],
  "overrides": [
    {
      "files": [
        "*.json"
      ],
      "parser": "jsonc-eslint-parser",
      "plugins": [
        "jsonc"
      ],
      "rules": {
        "jsonc/array-bracket-newline": [
          "error",
          "always"
        ],
        "jsonc/array-element-newline": [
          "error",
          "always"
        ],
        "jsonc/indent": [
          "error",
          2
        ],
        "jsonc/object-curly-newline": [
          "error",
          "always"
        ],
        "jsonc/object-property-newline": [
          "error"
        ],
        "jsonc/quotes": [
          "error"
        ],
        "jsonc/sort-keys": [
          "error",
          "asc",
          {
            "caseSensitive": false,
            "natural": true
          }
        ],
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 1
          }
        ],
        "no-trailing-spaces": [
          "error"
        ]
      }
    },
    {
      "files": [
        "*.ts"
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": 2018,
        "sourceType": "module"
      },
      "plugins": [
        "@typescript-eslint"
      ],
      "rules": {
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array-simple"
          }
        ],
        "@typescript-eslint/ban-ts-comment": [
          "error"
        ],
        "@typescript-eslint/ban-tslint-comment": [
          "error"
        ],
        "@typescript-eslint/brace-style": [
          "error",
          "1tbs"
        ],
        "@typescript-eslint/comma-dangle": [
          "error",
          "always-multiline"
        ],
        "@typescript-eslint/consistent-indexed-object-style": [
          "error",
          "record"
        ],
        "@typescript-eslint/consistent-type-assertions": [
          "error",
          {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "allow-as-parameter"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": [
          "error",
          "interface"
        ],
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "disallowTypeAnnotations": true,
            "prefer": "type-imports"
          }
        ],
        "@typescript-eslint/explicit-function-return-type": [
          "error"
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "error"
        ],
        "@typescript-eslint/explicit-module-boundary-types": [
          "error"
        ],
        "@typescript-eslint/func-call-spacing": [
          "error",
          "never"
        ],
        "@typescript-eslint/indent": [
          "error",
          2,
          {
            "SwitchCase": 1,
            "VariableDeclarator": "first"
          }
        ],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": true
            }
          }
        ],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": {
              "memberTypes": [
                "field",
                "constructor",
                "method"
              ],
              "order": "alphabetically"
            }
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "format": [
              "camelCase"
            ],
            "leadingUnderscore": "forbid",
            "selector": "default",
            "trailingUnderscore": "forbid"
          },
          {
            "format": [
              "camelCase",
              "PascalCase"
            ],
            "leadingUnderscore": "forbid",
            "selector": "variable",
            "trailingUnderscore": "forbid"
          },
          {
            "format": [
              "PascalCase"
            ],
            "leadingUnderscore": "forbid",
            "prefix": [
              "I"
            ],
            "selector": "interface",
            "trailingUnderscore": "forbid"
          },
          {
            "format": [
              "PascalCase"
            ],
            "leadingUnderscore": "forbid",
            "selector": "typeAlias",
            "trailingUnderscore": "forbid"
          },
          {
            "format": [
              "PascalCase"
            ],
            "leadingUnderscore": "forbid",
            "selector": "class",
            "trailingUnderscore": "forbid"
          },
          {
            "format": [
              "PascalCase"
            ],
            "leadingUnderscore": "forbid",
            "selector": "typeParameter",
            "trailingUnderscore": "forbid"
          },
          {
            "format": [
              "camelCase"
            ],
            "leadingUnderscore": "allow",
            "selector": "parameter",
            "trailingUnderscore": "forbid"
          }
        ],
        "@typescript-eslint/no-array-constructor": [
          "error"
        ],
        "@typescript-eslint/no-confusing-non-null-assertion": [
          "error"
        ],
        "@typescript-eslint/no-dupe-class-members": [
          "error"
        ],
        "@typescript-eslint/no-empty-interface": [
          "error"
        ],
        "@typescript-eslint/no-explicit-any": [
          "error"
        ],
        "@typescript-eslint/no-extraneous-class": [
          "error"
        ],
        "@typescript-eslint/no-for-in-array": [
          "error"
        ],
        "@typescript-eslint/no-implicit-any-catch": [
          "error"
        ],
        "@typescript-eslint/no-invalid-this": [
          "error"
        ],
        "@typescript-eslint/no-invalid-void-type": [
          "error"
        ],
        "@typescript-eslint/no-loss-of-precision": [
          "error"
        ],
        "@typescript-eslint/no-misused-new": [
          "error"
        ],
        "@typescript-eslint/no-namespace": [
          "error"
        ],
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": [
          "error"
        ],
        "@typescript-eslint/no-non-null-asserted-optional-chain": [
          "error"
        ],
        "@typescript-eslint/no-non-null-assertion": [
          "error"
        ],
        "@typescript-eslint/no-parameter-properties": [
          "error"
        ],
        "@typescript-eslint/no-require-imports": [
          "error"
        ],
        "@typescript-eslint/no-this-alias": [
          "error"
        ],
        "@typescript-eslint/no-unnecessary-type-constraint": [
          "error"
        ],
        "@typescript-eslint/no-unused-expressions": [
          "error"
        ],
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_"
          }
        ],
        "@typescript-eslint/no-use-before-define": [
          "error"
        ],
        "@typescript-eslint/no-useless-constructor": [
          "error"
        ],
        "@typescript-eslint/no-var-requires": [
          "error"
        ],
        "@typescript-eslint/prefer-as-const": [
          "error"
        ],
        "@typescript-eslint/prefer-enum-initializers": [
          "error"
        ],
        "@typescript-eslint/prefer-for-of": [
          "error"
        ],
        "@typescript-eslint/prefer-function-type": [
          "error"
        ],
        "@typescript-eslint/prefer-literal-enum-member": [
          "error"
        ],
        "@typescript-eslint/prefer-optional-chain": [
          "error"
        ],
        "@typescript-eslint/quotes": [
          "error",
          "single"
        ],
        "@typescript-eslint/semi": [
          "error",
          "always"
        ],
        "@typescript-eslint/sort-type-union-intersection-members": [
          "error"
        ],
        "@typescript-eslint/typedef": [
          "error",
          {
            "arrowParameter": true,
            "memberVariableDeclaration": true,
            "parameter": true,
            "propertyDeclaration": true
          }
        ],
        "@typescript-eslint/unified-signatures": [
          "error"
        ],
        "arrow-parens": [
          "error"
        ],
        "constructor-super": [
          "error"
        ],
        "curly": [
          "error",
          "all"
        ],
        "eqeqeq": [
          "error"
        ],
        "for-direction": [
          "error"
        ],
        "getter-return": [
          "error"
        ],
        "new-parens": [
          "error"
        ],
        "no-caller": [
          "error"
        ],
        "no-confusing-arrow": [
          "error"
        ],
        "no-eval": [
          "error"
        ],
        "no-lonely-if": [
          "error"
        ],
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 1
          }
        ],
        "no-new-object": [
          "error"
        ],
        "no-return-await": [
          "error"
        ],
        "no-sequences": [
          "error"
        ],
        "no-tabs": [
          "error"
        ],
        "no-trailing-spaces": [
          "error"
        ],
        "no-var": [
          "error"
        ],
        "no-with": [
          "error"
        ],
        "prefer-numeric-literals": [
          "error"
        ],
        "prefer-object-spread": [
          "error"
        ],
        "prefer-promise-reject-errors": [
          "error"
        ],
        "prefer-regex-literals": [
          "error"
        ],
        "prefer-rest-params": [
          "error"
        ],
        "prefer-spread": [
          "error"
        ],
        "prefer-template": [
          "error"
        ],
        "radix": [
          "error"
        ],
        "sort-imports": [
          "error"
        ],
        "sort-keys": [
          "error",
          "asc",
          {
            "caseSensitive": false,
            "natural": true
          }
        ],
        "sort-vars": [
          "error"
        ]
      }
    }
  ]
}
